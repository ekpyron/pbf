#version 460
#extension GL_ARB_separate_shader_objects : enable
#extension GL_KHR_shader_subgroup_basic : enable

#include "common.comp"

layout (local_size_x_id = 0, local_size_y = 1, local_size_z = 1) in;

layout(std430, binding = 0, set = 0) buffer Particles
{
    ParticleKey particleKeys[];
};

layout(std430, binding = 0, set = 1) buffer OldParticles
{
    ParticleData particles[];
};

layout(push_constant) uniform constants {
    vec3 externalAccel;
    float lastTimestep;
    float timestep;
};

void main (void)
{
    uint gid = gl_GlobalInvocationID.x;
    ParticleKey key = particleKeys[gid];
    ParticleData data = particles[key.index];
    vec3 velocity = data.velocity;
    uint type = data.type;

    float masses[2] = { 1.0f, 2.0f };

    velocity += masses[type] * externalAccel * timestep;
    particleKeys[gid].position += timestep * velocity;
    particles[key.index].velocity = velocity;
}
