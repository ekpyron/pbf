#version 460
#extension GL_ARB_separate_shader_objects : enable
#extension GL_KHR_shader_subgroup_basic : enable

layout (local_size_x_id = 0, local_size_y = 1, local_size_z = 1) in;

struct ParticleKey {
    vec3 position;
    uint idx;
};

struct ParticleData {
    vec3 position;
    uint aux;
};

layout(std430, binding = 0, set = 0) buffer Particles
{
    ParticleKey particleKeys[];
};

layout(std430, binding = 0, set = 1) buffer OldParticles
{
    ParticleData particles[];
};

const float lastTimestep = 1.0 / 60.0;
const float timestep = 1.0 / 60.0;

const vec3 gravity = vec3(0, -9.81, 0);

void main (void)
{
    uint gid = gl_GlobalInvocationID.x;
    ParticleKey key = particleKeys[gid];

    vec3 velocity = vec3(key.position - particles[key.idx].position) / lastTimestep;
    velocity += 0.25 * gravity * timestep;
    particleKeys[gid].position += timestep * velocity;
}
