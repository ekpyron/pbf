#version 460
#extension GL_ARB_separate_shader_objects : enable
#extension GL_KHR_shader_subgroup_basic : enable

layout (local_size_x_id = 0, local_size_y = 1, local_size_z = 1) in;

struct ParticleData {
    vec3 position;
    float aux;
};

layout(std430, binding = 0, set = 1) readonly buffer Particles
{
    ParticleData particles[];
};

// TODO: make specialization constants or push constants
ivec3 GRID_HASHWEIGHTS = ivec3(1, 64, 64*64);
ivec3 GRID_MAX = ivec3(1023, 31, 31);
ivec3 GRID_MIN = ivec3(-32, -32, -32);

uint GetHash(uint id) {
    highp ivec3 grid = ivec3 (clamp (particles[id].position, GRID_MIN, GRID_MAX));
    return uint (dot (grid - GRID_MIN, GRID_HASHWEIGHTS));
}
