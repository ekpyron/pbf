struct ParticleKey {
    vec3 position;
    uint index;
};

layout(std430, binding = 0, set = 1) readonly buffer ParticleKeys
{
    ParticleKey particleKeys[];
};

layout(std140, binding = 1, set = 1) uniform GridData {
    ivec3 GRID_MAX;
    ivec3 GRID_MIN;
    ivec3 GRID_HASHWEIGHTS;
};

layout(std430, binding = 2, set = 1) writeonly buffer SortedParticles
{
    ParticleKey particleKeysSorted[];
};

uint getHash(uint id) {
    highp ivec3 grid = ivec3(floor(clamp (particleKeys[id].position, GRID_MIN, GRID_MAX) - GRID_MIN));
    return uint (dot (grid, GRID_HASHWEIGHTS));
}

void sortingCopy(uint src, uint dst) {
    particleKeysSorted[dst] = particleKeys[src];
}