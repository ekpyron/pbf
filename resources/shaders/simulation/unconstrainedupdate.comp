#version 460
#extension GL_ARB_separate_shader_objects : enable
#extension GL_KHR_shader_subgroup_basic : enable

layout (local_size_x_id = 0, local_size_y = 1, local_size_z = 1) in;

struct ParticleData {
    vec3 position;
    uint aux;
};

layout(std430, binding = 0, set = 0) buffer Particles
{
    ParticleData particles[];
};

layout(std430, binding = 0, set = 1) buffer OldParticles
{
    ParticleData oldParticles[];
};

const float lastTimestep = 1.0 / 60.0;
const float timestep = 1.0 / 60.0;

const vec3 gravity = vec3(0, -9.81, 0);

void main (void)
{
    uint gid = gl_GlobalInvocationID.x;
    vec3 velocity = vec3(particles[gid].position - oldParticles[gid].position) / lastTimestep;
    // velocity = 2.0 * gravity * timestep;
    particles[gid].position += timestep * velocity;

}
