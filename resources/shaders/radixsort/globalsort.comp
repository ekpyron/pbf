#version 460
#extension GL_ARB_separate_shader_objects : enable
#extension GL_KHR_shader_subgroup_basic : enable

layout (local_size_x_id = 0, local_size_y = 1, local_size_z = 1) in;

const uint BLOCKSIZE = gl_WorkGroupSize.x;

layout(std430, binding = 1, set = 0) readonly buffer PrefixSums
{
    uint prefixSum[];
};

layout(std430, binding = 2, set = 0) readonly buffer BlockSums
{
    uint blockSum[];
};

layout(push_constant) uniform constants {
    uvec4 blockSumOffsets;
    int bitShift;
};

uint GetHash(uint);

uint GetPermutation(uint id) {
    uint bits = bitfieldExtract(GetHash(id), bitShift, 2);
    return blockSum[blockSumOffsets[bits] + gl_WorkGroupID.x] + prefixSum[gl_GlobalInvocationID.x];
}
